package 상속;

public class Main {

	public static void main(String[] args) {
		// 1. 상속을 받으면 상위클래스의 기능을 물려받는다
		//Super store1 = new Super();
		Sub store2 = new Sub();
		
		store2.coffee();
		store2.waffle();
		
		// 2. 하위클래스 타입의 객체는 상위클래스 타입으로 형변환이 가능하다.
		// => 업캐스팅
		
		Super store3 = new Sub();
		//가게 주인 supper, 일하는 사람 sub
		
		//상위 클래스 타입으로 업캐스팅된 객체는 다시 하위클래스 타입으로 형변환이 가능하다.
		// 대신 명시적 형변환해야함
		((Sub)store3).waffle();
		
		// 3. 메소드 오버라이딩(재정의)
		store3.coffee();
		
		// 4. 메소드 오버로딩(중복정의) : 한 클래스 내에서 메소드의 이름을 동일하게 정의하는것
		
		// 5. 추상메소드, 추상클래스
		// - 모든 하위클래스에서 오버라이딩이 일어남 => 상위클래스에는 구체적인 설계를 할피요가 없음
		// - 대신 모든 하위클래스는 해당 메소드를 오버라이딩 해야함 => 구현의 강제성
		// - 추상클래스는 객체생성 불가능 => 미완성이니까!
		// - 업캐스팅 용도로만 사용 => 규격
		Super store4=new sub2();
		store4.coffee();
		
		// 6. 인터페이스
		// - 추상 클래스는 추상메소드 + 일반메소드
		// - but! 상호명만 제공한다?? => 인터페이스는 All 추상
		// - 오로지 추상메소드만 가질수 있음
		// - 상속 키워드 : extends
		// - 인터페이스 키워드 : implements (구현하다)
		
	}

}
